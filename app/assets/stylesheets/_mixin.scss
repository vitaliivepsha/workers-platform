
@mixin bp($point) {
  @if $point == xxxl {
    @media only screen and (max-width: 1919px) {
      @content;
    }
  } @else if $point == xxl {
    @media only screen and (max-width: 1439px) {
      @content;
    }
  } @else if $point == xl {
    @media only screen and (max-width: 1249px) {
      @content;
    }
  } @else if $point == lg {
    @media only screen and (max-width: 1199px) {
      @content;
    }
  } @else if $point == md {
    @media only screen and (max-width: 991px) {
      @content;
    }
  } @else if $point == sm {
    @media only screen and (max-width: 767px) {
      @content;
    }
  } @else if $point == xs {
    @media only screen and (max-width: 574px) {
      @content;
    }
  } @else if $point == xxs {
    @media only screen and (max-width: 375px) {
      @content;
    }
  }
}

/* @include transform-translate(#, #); */
@mixin transform-translate($first, $second) {
  -webkit-transform: translate($first, $second);
  -moz-transform: translate($first, $second);
  -ms-transform: translate($first, $second);
  -o-transform: translate($first, $second);
  transform: translate($first, $second);
}

/* @include transform-translateY(#); */
@mixin transform-translateY($first) {
  -webkit-transform: translateY($first);
  -moz-transform: translateY($first);
  -ms-transform: translateY($first);
  -o-transform: translateY($first);
  transform: translateY($first);
}

/* @include transform-translateX(#); */
@mixin transform-translateX($first) {
  -webkit-transform: translateX($first);
  -moz-transform: translateX($first);
  -ms-transform: translateX($first);
  -o-transform: translateX($first);
  transform: translateX($first);
}

/* @include transform-translate3d(#, #, #); */
@mixin transform-translate3d($first, $second, $third) {
  -webkit-transform: translate3d($first, $second, $third);
  -moz-transform: translate3d($first, $second, $third);
  -ms-transform: translate3d($first, $second, $third);
  -o-transform: translate3d($first, $second, $third);
  transform: translate3d($first, $second, $third);
}

/* @include transform-rotate(#); */
@mixin transform-rotate($first) {
  -webkit-transform: rotate($first);
  -moz-transform: rotate($first);
  -ms-transform: rotate($first);
  -o-transform: rotate($first);
  transform: rotate($first);
}

/* @include transform-scale(#); */
@mixin transform-scale($first) {
  -webkit-transform: scale($first);
  -moz-transform: scale($first);
  -ms-transform: scale($first);
  -o-transform: scale($first);
  transform: scale($first);
}

/* @include animation(#); */
@mixin animation($first) {
  -webkit-animation: sk-chasingDotsRotate $first infinite linear;
  -moz-animation: sk-chasingDotsRotate $first infinite linear;
  -o-animation: sk-chasingDotsRotate $first infinite linear;
  animation: sk-chasingDotsRotate $first infinite linear;
}

/* @include animation-delay(#); */
@mixin animation-delay($first) {
  -webkit-animation-delay: $first;
  -moz-animation-delay: $first;
  -o-animation-delay: $first;
  animation-delay: $first;
}

/* @include animation-duration(#); */
@mixin animation-duration($first) {
  -webkit-animation-duration: $first;
  -moz-animation-duration: $first;
  -o-animation-duration: $first;
  animation-duration: $first;
}

/* @include animation-fill-mode(#); */
@mixin animation-fill-mode($first) {
  -webkit-animation-fill-mode: $first;
  -moz-animation-fill-mode: $first;
  -o-animation-fill-mode: $first;
  animation-fill-mode: $first;
}

/* @include animation-name(#); */
@mixin animation-name($first) {
  -webkit-animation-name: $first;
  -moz-animation-name: $first;
  -o-animation-name: $first;
  animation-name: $first;
}

/* @include transition(#); */
@mixin transition($first) {
  -webkit-transition: all $first ease-in-out;
  -moz-transition: all $first ease-in-out;
  -o-transition: all $first ease-in-out;
  transition: all $first ease-in-out;
}

/* @include transition-transform(#, #); */
@mixin transition-transform($first, $second) {
  -webkit-transition: transform $first ease $second;
  -moz-transition: transform $first ease $second;
  -ms-transition: transform $first ease $second;
  -o-transition: transform $first ease $second;
  transition: transform $first ease $second;
}

/* @include transition-transform-cubic-bezier(#, #, #, #, #); */
@mixin transition-transform-cubic-bezier($first, $second-1, $second-2, $second-3, $second-4) {
  -webkit-transition: all $first cubic-bezier($second-1, $second-2, $second-3, $second-4);
  -moz-transition: all $first cubic-bezier($second-1, $second-2, $second-3, $second-4);
  -ms-transition: all $first cubic-bezier($second-1, $second-2, $second-3, $second-4);
  -o-transition: all $first cubic-bezier($second-1, $second-2, $second-3, $second-4);
  transition: all $first cubic-bezier($second-1, $second-2, $second-3, $second-4);
}

/* @include transition-timing-function(#); */
@mixin transition-timing-function($first) {
  transition-timing-function: $first;
  -moz-transition-timing-function: $first;
  -o-transition-timing-function: $first;
  -webkit-transition-timing-function: $first;
}

/* @include transition-duration(#); */
@mixin transition-duration($first) {
  -webkit-transition-duration: $first;
  -moz-transition-duration: $first;
  -o-transition-duration: $first;
  transition-duration: $first;
}

/* @include transition-delay(#); */
@mixin transition-delay($first) {
  -webkit-transition-delay: $first;
  -moz-transition-delay: $first;
  -o-transition-delay: $first;
  transition-delay: $first;
}

/* @include backface-visibility(#); */
@mixin backface-visibility($first) {
  -webkit-backface-visibility: $first;
  -moz-backface-visibility: $first;
  backface-visibility: $first;
}

/* @include transition-opacity-visibility(#, #); */
@mixin transition-opacity-visibility($first, $second) {
  -webkit-transition: opacity $first, visibility $second;
  -moz-transition: opacity $first, visibility $second;
  -o-transition: opacity $first, visibility $second;
  transition: opacity $first, visibility $second;
}

/* @include transition-opacity(#); */
@mixin transition-opacity($first) {
  -webkit-transition: opacity $first;
  -moz-transition: opacity $first;
  -o-transition: opacity $first;
  transition: opacity $first;
}

/* @include box-shadow(#); */
@mixin box-shadow($first) {
  -webkit-box-shadow: $first;
  -moz-box-shadow: $first;
  -o-box-shadow: $first;
  box-shadow: $first;
}

/* @include opacity(#); */
@mixin opacity($first) {
  -moz-opacity: $first;
  opacity: $first;
}

/* @include border-radius(#); */
@mixin border-radius($first) {
  -webkit-border-radius: $first;
  -moz-border-radius: $first;
  border-radius: $first;
}

/* @include border_b_l-radius(#); */
@mixin border_b_l-radius($first) {
  -webkit-border-bottom-left-radius: $first;
  -moz-border-radius-topleft: $first;
  border-bottom-left-radius: $first;
}

/* @include border_b_r-radius(#); */
@mixin border_b_r-radius($first) {
  -webkit-border-bottom-right-radius: $first;
  -moz-border-radius-topleft: $first;
  border-bottom-right-radius: $first;
}

/* @include border_t_r-radius(#); */
@mixin border_t_r-radius($first) {
  -webkit-border-top-right-radius: $first;
  -moz-border-radius-topleft: $first;
  border-top-right-radius: $first;
}

/* @include border_t_l-radius(#); */
@mixin border_t_l-radius($first) {
  -webkit-border-top-left-radius: $first;
  -moz-border-radius-topleft: $first;
  border-top-left-radius: $first;
}

/* @include box-sizing(#); */
@mixin box-sizing($first) {
  -webkit-box-sizing: $first;
  -moz-box-sizing: $first;
  box-sizing: $first;
}

/* @include user-select(#); */
@mixin user-select($first) {
  -webkit-user-select: $first;
  -moz-user-select: $first;
  -ms-user-select: $first;
  user-select: $first;
}

/* @include filter-blur-brightness(#, #); */
@mixin filter-blur-brightness($first, $second) {
  -webkit-filter: blur($first) brightness($second);
  -ms-filter: blur($first) brightness($second);
  filter: blur($first) brightness($second);
}

/* @include filter-img(#, #); */
@mixin filter-img($first, $second) {
  -webkit-filter: $first ($second);
  -ms-filter: $first ($second);
  filter: $first ($second);
}

/* @include filter(#); */
@mixin filter($first) {
  -webkit-filter: $first;
  -ms-filter: $first;
  filter: $first;
}

/* @include box-sizing(#, #(0)); */
@mixin background-size($first, $second) {
  @if $second == 0 {
    -webkit-background-size: $first;
    -o-background-size: $first;
    -moz-background-size: $first;
    background-size: $first;
  } @else {
    -webkit-background-size: $first $second;
    -o-background-size: $first $second;
    -moz-background-size: $first $second;
    background-size: $first $second;
  }
}

@mixin centering {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform-translate(-50%, -50%);
}
@mixin centering-x {
  position: relative;
  left: 50%;
  @include transform-translateX(-50%);
}
@mixin centering-y {
  position: absolute;
  top: 50%;
  @include transform-translateY(-50%);
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

// font-face
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ){
  @font-face{
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if $asset-pipeline == true {
      src: font-url('#{$file-path}.eot');
      src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'), font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.ttf') format('truetype');
    }
    @else {
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype');
    }
  }
}

@mixin border-hover($height, $bg) {
  position: relative;
  &:after{
    content: '';
    position: absolute;
    width: 0;
    height: $height;
    background: $bg;
    left: 0;
    bottom: -3px;
    @include transition(.5s);
  }
  &:hover{
    text-decoration: none;
    &:after{
      width: 100%;
    }
  }
}

@mixin button($font, $color, $focus){
  border: 2px solid $color;
  @include border-radius(30px);
  min-height: 40px;
  line-height: 38px;
  display: inline-block;
  font-family: $font, sans-serif;
  text-align: center;
  color: $focus;
  background: $color;
  font-size: 1.2em;
  text-transform: uppercase;
  -webkit-transition: background .3s ease-in-out;
  -moz-transition: background .3s ease-in-out;
  -o-transition: background .3s ease-in-out;
  transition: background .3s ease-in-out;

  &:active, &:focus{
    outline: none;
  }

  &:hover{
    color: $color;
    background: $focus;
  }

}

@mixin input ($font, $color, $focus, $background){
  border: 2px solid $color;
  @include border-radius(30px);
  height: 40px;
  line-height: 40px;
  display: inline-block;
  font-family: $font;
  text-align: center;
  color: $color;
  font-size: 1em;
  background: $background;

  &:focus{
    outline: none;
    border-color: $focus;
  }

  &::-webkit-input-placeholder{
    color: $color;
    font-family: $font;
  }
  &::-moz-placeholder {
    color: $color;
    font-family: $font;
  }
  &:-moz-placeholder{
    color: $color;
    font-family: $font;
  }
  &:-ms-input-placeholder {
    color: $color;
    font-family: $font;
  }
}

@mixin select ($font, $color, $background){
  border: 2px solid $color;
  @include border-radius(30px);
  height: 40px;
  line-height: 40px;
  display: inline-block;
  background: $background;

  .selecttext{
    position: absolute;
    display: block;
    width: 100%;
    padding: 0;
    text-align: center;
    height: 36px;
    line-height: 36px;
    font-family: $font;
    color: $color;
    font-size: 1em;
  }

  .arrows{
    background-size: 70%;
    width: 12px;
    background-position: 0 -5px;
    right: 15px;
    @include centering-y;
  }
}